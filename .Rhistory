install.packages('ggplot2')
library(ggplot2)
ggplot(mtcars, aes(hp,mpg)) + geom_point()
number <- 10
words <- "hello world"
ls()
numeric_vector <- c(1, 2, 3)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
fruit_names <- c('apples', 'mangos')
fruits_factor <- factor(fruits, labels = fruit_names)
sum(fruits_factor)
fruits <- c(1, 1, 2)
fruit_names <- c('apples', 'mangos')
fruits_factor <- factor(fruits, labels = fruit_names)
sum(fruits_factor)
sum(fruits_factor)
?mean
browse
?browse
install.packages('dplyr')
mean(1:10)
data(swiss)
names(swiss)
View(swiss)
number <- 10
number
word
words
words <- "hello world"
library(MASS)
data()
library(ggplot2)
library(MASS)
library(MASS)
data(UKgas)
remove(number, words)
data(sleep)
sleep
library(UKgas)
data()
data(UKgas)
list(UKgas)
View(UKgas)
?UKgas
hist(UKgas)
ls(UKgas)
names(UKgas)
str(UKgas)
levels(UKgas)
ls(qtr1) #list objects
ls()
rm(sleep)
data(sleep)
ls(sleep)
names(sleep)
variance(UKgas)
summary(UKgas)
sort(UKgas)
length(UKgas)
test<-UKgas[sequence(1,108,2)]
test<-UKgas[sequence(1,108,2),]
test<-UKgas[sequence(1,2)]
test<-UKgas[sequence(1,108)]
test<-UKgas[sequence(1,108,2)]
boxplot(UKgas)
plot(UKgas)
install.packages("rmmarkdown")
variance(UKgas) # the dataset has only one column hence no variance
#########################################################
# Assignment 01 Collaborative Social Sciene Data Analysis
# Björn Boening | bjoernboening
# UKgas dataset from R
# 30 Sept 2015
install.packages("rmmarkdown") # to hopefully make cool presentations in the future :D
data(UKgas) # load dataset
?UKgas # data signature
hist(UKgas) # view a histogram
ls(UKgas) #list objects
names(UKgas) #list variables
str(UKgas) # data structure
levels(UKgas) # data levels
ls() # list UKgas
summary(UKgas)
sort(UKgas) # here I want to sort my data and reshape it, *i miss excel*
length(UKgas)
test<-UKgas[sequence(1,108,2)]
test <- UKgas[seq]
boxplot(UKgas)
plot(UKgas) # well, it didnt work but at least I can show a plot which shows the answer to question #1 in my readme.
### next assignment follows
#########################################################
# Assignment 01 Collaborative Social Sciene Data Analysis
# Björn Boening | bjoernboening
# UKgas dataset from R
# 30 Sept 2015
install.packages("rmmarkdown") # to hopefully make cool presentations in the future :D
data(UKgas) # load dataset
?UKgas # data signature
hist(UKgas) # view a histogram
ls(UKgas) #list objects - okay, there are no objects
names(UKgas) #list variables - yep, no variables, but we could generate some
str(UKgas) # data structure - no useful data structure so far to answer both research questions
levels(UKgas) # data levels - nope! no data levels
ls(UKgas) # list UKgas again
summary(UKgas) # basic summary statistics
sort(UKgas) # here I want to sort my data and reshape it, *i miss excel*
length(UKgas)
test<-UKgas[sequence(1,108,2)]
test <- UKgas[seq]
boxplot(UKgas)
plot(UKgas) # well, it didnt work but at least I can show a plot which shows the answer to question #1 in my readme.
### next assignment follows
str(Andrew)
Andrew
### Load libraries
library(shiny)
library(leaflet)
library(httr)
library(dplyr)
library(XML)
library(maptools)
library(sp)
library(rgdal)
library(gsubfn)
### Prepare Coordinates
Attacken <- read.csv("E:/bjoer/Documents/Google Drive/Universität/Hertie/03_Fall 2015/05_Master Thesis/00_Piracy_2015-16/03_Data/Tennessee/MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
Attacken <- read.csv("E:/bjoer/Documents/GitHub/MaritimePiracy/MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
View(Attacken)
Attacken$longitude <- gsub(",", ".", Attacken$longitude)
Attacken$latitude <- gsub(",", ".", Attacken$latitude)
Attacken$longitude <- as.numeric(Attacken$longitude)
Attacken$latitude <- as.numeric(Attacken$latitude)
### Load libraries
library(shiny)
library(leaflet)
library(httr)
library(dplyr)
library(XML)
library(maptools)
library(sp)
library(rgdal)
library(gsubfn)
### Prepare Coordinates
Attacken <- read.csv("E:/bjoer/Documents/GitHub/MaritimePiracy/MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
Attacken$longitude <- gsub(",", ".", Attacken$longitude)
Attacken$latitude <- gsub(",", ".", Attacken$latitude)
Attacken$longitude <- as.numeric(Attacken$longitude)
Attacken$latitude <- as.numeric(Attacken$latitude)
outline <- attacks[Attacken(attacks$longitude, quakes$latitude),]
outline <- Attacken[Attacken(Attacken$longitude, Attacken$latitude),]
Coordinates <- select(Attacken, 9 10)
Coordinates <- select(Attacken, 9 10)
Coordinates <- data.frame(matrix(unlist(Coordinates), nrow=646, byrow=T)) # Convert to dataframe
Coordinates <- select(Attacken, 9, 10)
View(Coordinates)
Coordinates <- data.frame(matrix(unlist(Coordinates), nrow=646, byrow=T)) # Convert to dataframe
Attacken <- read.csv("E:/bjoer/Documents/GitHub/MaritimePiracy/MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
Attacken$longitude <- gsub(",", ".", Attacken$longitude)
Attacken$latitude <- gsub(",", ".", Attacken$latitude)
Attacken$longitude <- as.numeric(Attacken$longitude)
Attacken$latitude <- as.numeric(Attacken$latitude)
Coordinates <- select(Attacken, 9, 10)
outline <- Attacken[Attacken(Attacken$longitude, Attacken$latitude),]
data(Coordinates)
Coordinates <- data.frame(matrix(unlist(Coordinates), nrow=6434, byrow=T)) # Convert to dataframe
summary(Attacken$latitude)
shiny::runApp('E:/bjoer/Desktop')
install.packages("ggvis")
library(ggvis)
shiny::runApp('E:/bjoer/Desktop')
shiny::runApp('E:/bjoer/Desktop')
install.packages("dygraphs")
shiny::runApp('E:/bjoer/Desktop')
#########################################################
#### Maritime Piracy Data Analysis ######################
#########################################################
# Import the dataset about piracy attacks into your wd
# Call libraries we need for the project, make sure you have them installed
library(base)
library(rio) # swiss army knife for imports
library(plyr) # count occurences
library(ggplot2) # nice plots
library(stargazer) # nicer regression output which looks like a real publication
library(XML) # Tool for generating XML file
library(WDI) # Scraping Data from the World Bank
#attach(shipping)
try(setwd("/Users/codykoebnick/Downloads/Data Set"),silent=TRUE)
try(setwd("E:/bjoer/Documents/Google Drive/UniversitÃ¤t/Hertie/03_Fall 2015/05_Master Thesis/00_Piracy_2015-16/03_Data/Tennessee"),silent=TRUE)
try(setwd("/Users/laurencehendry/GitHub/MaritimePiracy"),silent=TRUE)
#import data
# empty cells are now coded with NA and can manually be excluded from any function with na.omit command
getwd()
# have a look at how the variables are created
library(car) # scatterplots
library(httr) # scraping from http sites
library(tidyr) # data wrangling
library(countrycode) # provides world bank country codes
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
# set working directories
library(dplyr) # data wrangling
try(setwd("E:/bjoer/Documents/Google Drive/Universität/Hertie/03_Fall 2015/05_Master Thesis/00_Piracy_2015-16/03_Data/Tennessee"),silent=TRUE)
try(setwd("/Users/laurencehendry/GitHub/MaritimePiracy"),silent=TRUE)
getwd()
#import data
# empty cells are now coded with NA and can manually be excluded from any function with na.omit command
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
try(setwd("/Users/codykoebnick/Downloads/Data Set"),silent=TRUE)
try(setwd("E:/bjoer/Documents/GitHub/MaritimePiracyWrangling"),silent=TRUE)
try(setwd("/Users/laurencehendry/GitHub/MaritimePiracy"),silent=TRUE)
getwd()
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
View(shipping)
attach(shipping)
sample <- shipping[ which(closest_coastal_state=='Indonesia',]
sample <- shipping[ which(closest_coastal_state=='Indonesia']
sample <- shipping[ which(closest_coastal_state=='Indonesia')]
sample <- subset(shipping, closest_coastal_state=="Indonesia", "Malaysia",
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia",
select=1:25)
View(sample)
is.na(incident_type) <- 0
sample <- is.na(incident_type) <- 0
sample <- subset(shipping, closest_coastal_state=="Indonesia",
select=1:25)
na.omit(sample)
delete.na(incident_type)
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"])))
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"]))
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"]))
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"]))
select=1:25))
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"])),
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"])),
select=1:25)
View(sample)
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
# have a look at how the variables are created
str(shipping)
# create sub sample for wrangling
sample <- subset(shipping, closest_coastal_state=="Indonesia", !(is.na(shipping["incident_type"])),
select=1:25)
#########################################################
#### Maritime Piracy Data Analysis ######################
#########################################################
# Import the dataset about piracy attacks into your wd
# Call libraries we need for the project, make sure you have them installed
library(base)
library(rio) # swiss army knife for imports
library(plyr) # count occurences
library(tidyr) # data wrangling
library(ggplot2) # nice plots
library(stargazer) # nicer regression output which looks like a real publication
library(car) # scatterplots
library(httr) # scraping from http sites
library(XML) # Tool for generating XML file
library(WDI) # Scraping Data from the World Bank
library(countrycode) # provides world bank country codes
#attach(shipping)
# set working directories
try(setwd("/Users/codykoebnick/Downloads/Data Set"),silent=TRUE)
library(dplyr) # data wrangling
try(setwd("E:/bjoer/Documents/GitHub/MaritimePiracyWrangling"),silent=TRUE)
try(setwd("/Users/laurencehendry/GitHub/MaritimePiracy"),silent=TRUE)
getwd()
try(setwd("/Users/codykoebnick/Downloads/Data Set"),silent=TRUE)
try(setwd("E:/bjoer/Documents/GitHub/MaritimePiracyWrangling"),silent=TRUE)
try(setwd("/Users/laurencehendry/GitHub/MaritimePiracy"),silent=TRUE)
getwd()
#import data
# empty cells are now coded with NA and can manually be excluded from any function with na.omit command
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
# have a look at how the variables are created
str(shipping)
# create sub sample for wrangling
sample <- subset(shipping, closest_coastal_state=="Indonesia", "Malaysia", "Singapore" & !(is.na(shipping["incident_type"])),
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia" & "Malaysia" & "Singapore" & !(is.na(shipping["incident_type"])),
select=1:25)
sample <- subset(shipping, closest_coastal_state==c["Indonesia", "Malaysia", "Singapore"] & !(is.na(shipping["incident_type"])),
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia" "Malaysia" "Singapore" & !(is.na(shipping["incident_type"])),
select=1:25)
sample <- subset(shipping, closest_coastal_state=="Indonesia" "Malaysia" "Singapore" & !(is.na(shipping["incident_type"])),
select=1:25)
sample <- shipping[shipping$closest_coastal_state %in% c("Indonesia", "Malaysia", "Singapore")]
sample
sample <- shipping[shipping$closest_coastal_state %in% c("Indonesia", "Malaysia", "Singapore")]
sample <- shipping[shipping$closest_coastal_state %in% c("Indonesia", "Malaysia", "Singapore"), ]
sample[!is.na(sample$closest_coastal_state), ]
shipping <- read.csv("MaritimePiracyTennessee.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE, na.strings = c("", "NA"))
sample <- shipping[shipping$closest_coastal_state %in% c("Indonesia", "Malaysia", "Singapore"), ]
sample$incident_type[is.na(sample$incident_type)] <- 0
View(sample)
sample$incident_type[is.na(sample$incident_type)] <- NULL
View(sample)
sub <- subset(sample, year > 2004, select = c(1:25))
sub <- subset(sample, year > 2002, select = c(1:25))
